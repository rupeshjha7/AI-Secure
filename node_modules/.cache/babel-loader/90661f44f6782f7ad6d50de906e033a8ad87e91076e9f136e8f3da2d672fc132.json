{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jharu\\\\OneDrive\\\\Desktop\\\\chatbot-gpt-arun-sir\\\\arun-sir-code-chatgpt\\\\new-updated-chatgpt\\\\New-AI-Secure\\\\AI-Secure\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport axios from 'axios';\nimport { Container, Box, TextField, IconButton, CircularProgress, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, InputAdornment } from '@mui/material';\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\nimport SendIcon from '@mui/icons-material/Send';\nimport { useTable } from 'react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [inputRows, setInputRows] = useState(1);\n\n  // Handle dynamic input resizing based on the text length\n  const handleInputChange = event => {\n    const value = event.target.value;\n    setPrompt(value);\n\n    // Dynamically adjust the number of rows in the text field\n    const rowCount = Math.min(5, Math.floor(value.length / 50) + 1);\n    setInputRows(rowCount);\n  };\n\n  // Submit handler for querying the backend\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (loading) return;\n    const userMessage = {\n      text: prompt,\n      type: 'user'\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setPrompt('');\n    setLoading(true);\n    const endpoint = 'https://1v3jikx5k1.execute-api.us-west-2.amazonaws.com/Prod/query'; // Replace with your actual endpoint\n\n    try {\n      const result = await axios.post(endpoint, {\n        prompt\n      });\n      const botMessage = {\n        text: result.data.response,\n        type: 'bot'\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n      setData(result.data.response);\n    } catch (error) {\n      if (error.response) {\n        console.error('Response error:', error.response.data);\n      } else if (error.request) {\n        console.error('Request error:', error.request);\n      } else {\n        console.error('Error setting up request:', error.message);\n      }\n      const errorMessage = {\n        text: 'Error fetching response: ' + error.message,\n        type: 'bot'\n      };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Define table columns dynamically based on the response data\n  const columns = useMemo(() => data.length > 0 ? Object.keys(data[0]).map(key => ({\n    Header: key,\n    accessor: key\n  })) : [], [data]);\n  const tableInstance = useTable({\n    columns,\n    data\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"chat-messages\",\n      sx: {\n        flexGrow: 1,\n        overflowY: '100vh',\n        padding: 2,\n        backgroundColor: '#ffffff'\n      },\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          padding: 1,\n          marginBottom: 1,\n          backgroundColor: message.type === 'user' ? '#f1f1f1' : '#ffffff'\n        },\n        children: typeof message.text === 'string' ? /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(TableContainer, {\n          sx: {\n            marginTop: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            ...getTableProps(),\n            \"aria-label\": \"data table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(TableRow, {\n                ...headerGroup.getHeaderGroupProps(),\n                children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                  ...column.getHeaderProps(),\n                  children: column.render('Header')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              ...getTableBodyProps(),\n              children: rows.map(row => {\n                prepareRow(row);\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  ...row.getRowProps(),\n                  children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(TableCell, {\n                    ...cell.getCellProps(),\n                    children: cell.render('Cell')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: handleSubmit,\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: 2,\n        backgroundColor: '#ffffff',\n        //   borderTop: '1px solid #e0e0e0',\n        position: 'sticky',\n        bottom: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        multiline: true,\n        minRows: inputRows,\n        maxRows: 5,\n        value: prompt,\n        onChange: handleInputChange,\n        placeholder: \"Enter your query\",\n        variant: \"outlined\",\n        size: \"small\",\n        disabled: loading,\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              component: \"label\",\n              children: [/*#__PURE__*/_jsxDEV(AttachFileIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                hidden: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this),\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              type: \"submit\",\n              color: \"primary\",\n              disabled: loading,\n              children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"ZSBwktr+SfilzbQbbgpI8ob2ggY=\", false, function () {\n  return [useTable];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useMemo","axios","Container","Box","TextField","IconButton","CircularProgress","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","InputAdornment","AttachFileIcon","SendIcon","useTable","jsxDEV","_jsxDEV","Home","_s","prompt","setPrompt","messages","setMessages","loading","setLoading","data","setData","inputRows","setInputRows","handleInputChange","event","value","target","rowCount","Math","min","floor","length","handleSubmit","e","preventDefault","userMessage","text","type","prevMessages","endpoint","result","post","botMessage","response","error","console","request","message","errorMessage","columns","Object","keys","map","key","Header","accessor","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","maxWidth","sx","height","display","flexDirection","children","className","flexGrow","overflowY","padding","backgroundColor","index","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","component","onSubmit","alignItems","position","bottom","fullWidth","multiline","minRows","maxRows","onChange","placeholder","variant","size","disabled","InputProps","startAdornment","hidden","endAdornment","color","_c","$RefreshReg$"],"sources":["C:/Users/jharu/OneDrive/Desktop/chatbot-gpt-arun-sir/arun-sir-code-chatgpt/new-updated-chatgpt/New-AI-Secure/AI-Secure/src/pages/Home.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Container,\r\n  Box,\r\n  TextField,\r\n  IconButton,\r\n  CircularProgress,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  InputAdornment,\r\n} from '@mui/material';\r\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { useTable } from 'react-table';\r\n\r\nfunction Home() {\r\n  const [prompt, setPrompt] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [inputRows, setInputRows] = useState(1);\r\n\r\n  // Handle dynamic input resizing based on the text length\r\n  const handleInputChange = (event) => {\r\n    const value = event.target.value;\r\n    setPrompt(value);\r\n\r\n    // Dynamically adjust the number of rows in the text field\r\n    const rowCount = Math.min(5, Math.floor(value.length / 50) + 1);\r\n    setInputRows(rowCount);\r\n  };\r\n\r\n  // Submit handler for querying the backend\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (loading) return;\r\n\r\n    const userMessage = { text: prompt, type: 'user' };\r\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\r\n    setPrompt('');\r\n    setLoading(true);\r\n\r\n    const endpoint = 'https://1v3jikx5k1.execute-api.us-west-2.amazonaws.com/Prod/query'; // Replace with your actual endpoint\r\n\r\n    try {\r\n      const result = await axios.post(endpoint, { prompt });\r\n      const botMessage = {\r\n        text: result.data.response,\r\n        type: 'bot',\r\n      };\r\n      setMessages((prevMessages) => [...prevMessages, botMessage]);\r\n      setData(result.data.response);\r\n    } catch (error) {\r\n      if (error.response) {\r\n        console.error('Response error:', error.response.data);\r\n      } else if (error.request) {\r\n        console.error('Request error:', error.request);\r\n      } else {\r\n        console.error('Error setting up request:', error.message);\r\n      }\r\n\r\n      const errorMessage = {\r\n        text: 'Error fetching response: ' + error.message,\r\n        type: 'bot',\r\n      };\r\n      setMessages((prevMessages) => [...prevMessages, errorMessage]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Define table columns dynamically based on the response data\r\n  const columns = useMemo(\r\n    () =>\r\n      data.length > 0\r\n        ? Object.keys(data[0]).map((key) => ({\r\n            Header: key,\r\n            accessor: key,\r\n          }))\r\n        : [],\r\n    [data]\r\n  );\r\n\r\n  const tableInstance = useTable({ columns, data });\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = tableInstance;\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ height: '100vh', display: 'flex', flexDirection: 'column' }}>\r\n      {/* Chat Message Box */}\r\n      <Box\r\n        className=\"chat-messages\"\r\n        sx={{\r\n          flexGrow: 1,\r\n          overflowY: '100vh',\r\n          padding: 2,\r\n          backgroundColor: '#ffffff',\r\n        }}\r\n      >\r\n        {messages.map((message, index) => (\r\n          <Box\r\n            key={index}\r\n            sx={{\r\n              padding: 1,\r\n              marginBottom: 1,\r\n              backgroundColor: message.type === 'user' ? '#f1f1f1' : '#ffffff',\r\n            }}\r\n          >\r\n            {typeof message.text === 'string' ? (\r\n              <pre>{message.text}</pre>\r\n            ) : (\r\n              <TableContainer sx={{ marginTop: 2 }}>\r\n                <Table {...getTableProps()} aria-label=\"data table\">\r\n                  <TableHead>\r\n                    {headerGroups.map((headerGroup) => (\r\n                      <TableRow {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map((column) => (\r\n                          <TableCell {...column.getHeaderProps()}>{column.render('Header')}</TableCell>\r\n                        ))}\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableHead>\r\n                  <TableBody {...getTableBodyProps()}>\r\n                    {rows.map((row) => {\r\n                      prepareRow(row);\r\n                      return (\r\n                        <TableRow {...row.getRowProps()}>\r\n                          {row.cells.map((cell) => (\r\n                            <TableCell {...cell.getCellProps()}>{cell.render('Cell')}</TableCell>\r\n                          ))}\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            )}\r\n          </Box>\r\n        ))}\r\n        {loading && <CircularProgress />}\r\n      </Box>\r\n\r\n      {/* Fixed Input Box */}\r\n      <Box\r\n        component=\"form\"\r\n        onSubmit={handleSubmit}\r\n        sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          padding: 2,\r\n          backgroundColor: '#ffffff',\r\n        //   borderTop: '1px solid #e0e0e0',\r\n          position: 'sticky',\r\n          bottom: 0,\r\n        }}\r\n      >\r\n        <TextField\r\n          fullWidth\r\n          multiline\r\n          minRows={inputRows}\r\n          maxRows={5}\r\n          value={prompt}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Enter your query\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          disabled={loading}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <IconButton component=\"label\">\r\n                  <AttachFileIcon />\r\n                  <input type=\"file\" hidden />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton type=\"submit\" color=\"primary\" disabled={loading}>\r\n                  <SendIcon />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,SAAS,EACTC,GAAG,EACHC,SAAS,EACTC,UAAU,EACVC,gBAAgB,EAChBC,KAAK,EACLC,SAAS,EACTC,SAAS,EACTC,cAAc,EACdC,SAAS,EACTC,QAAQ,EACRC,cAAc,QACT,eAAe;AACtB,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACwB,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC0B,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC4B,IAAI,EAAEC,OAAO,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAAC8B,SAAS,EAAEC,YAAY,CAAC,GAAG/B,QAAQ,CAAC,CAAC,CAAC;;EAE7C;EACA,MAAMgC,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK;IAChCX,SAAS,CAACW,KAAK,CAAC;;IAEhB;IACA,MAAME,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,KAAK,CAACL,KAAK,CAACM,MAAM,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;IAC/DT,YAAY,CAACK,QAAQ,CAAC;EACxB,CAAC;;EAED;EACA,MAAMK,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIjB,OAAO,EAAE;IAEb,MAAMkB,WAAW,GAAG;MAAEC,IAAI,EAAEvB,MAAM;MAAEwB,IAAI,EAAE;IAAO,CAAC;IAClDrB,WAAW,CAAEsB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEH,WAAW,CAAC,CAAC;IAC7DrB,SAAS,CAAC,EAAE,CAAC;IACbI,UAAU,CAAC,IAAI,CAAC;IAEhB,MAAMqB,QAAQ,GAAG,mEAAmE,CAAC,CAAC;;IAEtF,IAAI;MACF,MAAMC,MAAM,GAAG,MAAM/C,KAAK,CAACgD,IAAI,CAACF,QAAQ,EAAE;QAAE1B;MAAO,CAAC,CAAC;MACrD,MAAM6B,UAAU,GAAG;QACjBN,IAAI,EAAEI,MAAM,CAACrB,IAAI,CAACwB,QAAQ;QAC1BN,IAAI,EAAE;MACR,CAAC;MACDrB,WAAW,CAAEsB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEI,UAAU,CAAC,CAAC;MAC5DtB,OAAO,CAACoB,MAAM,CAACrB,IAAI,CAACwB,QAAQ,CAAC;IAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,IAAIA,KAAK,CAACD,QAAQ,EAAE;QAClBE,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAACD,QAAQ,CAACxB,IAAI,CAAC;MACvD,CAAC,MAAM,IAAIyB,KAAK,CAACE,OAAO,EAAE;QACxBD,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACE,OAAO,CAAC;MAChD,CAAC,MAAM;QACLD,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACG,OAAO,CAAC;MAC3D;MAEA,MAAMC,YAAY,GAAG;QACnBZ,IAAI,EAAE,2BAA2B,GAAGQ,KAAK,CAACG,OAAO;QACjDV,IAAI,EAAE;MACR,CAAC;MACDrB,WAAW,CAAEsB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEU,YAAY,CAAC,CAAC;IAChE,CAAC,SAAS;MACR9B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAM+B,OAAO,GAAGzD,OAAO,CACrB,MACE2B,IAAI,CAACY,MAAM,GAAG,CAAC,GACXmB,MAAM,CAACC,IAAI,CAAChC,IAAI,CAAC,CAAC,CAAC,CAAC,CAACiC,GAAG,CAAEC,GAAG,KAAM;IACjCC,MAAM,EAAED,GAAG;IACXE,QAAQ,EAAEF;EACZ,CAAC,CAAC,CAAC,GACH,EAAE,EACR,CAAClC,IAAI,CACP,CAAC;EAED,MAAMqC,aAAa,GAAGhD,QAAQ,CAAC;IAAEyC,OAAO;IAAE9B;EAAK,CAAC,CAAC;EACjD,MAAM;IAAEsC,aAAa;IAAEC,iBAAiB;IAAEC,YAAY;IAAEC,IAAI;IAAEC;EAAW,CAAC,GAAGL,aAAa;EAE1F,oBACE9C,OAAA,CAAChB,SAAS;IAACoE,QAAQ,EAAC,IAAI;IAACC,EAAE,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,OAAO,EAAE,MAAM;MAAEC,aAAa,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAEzFzD,OAAA,CAACf,GAAG;MACFyE,SAAS,EAAC,eAAe;MACzBL,EAAE,EAAE;QACFM,QAAQ,EAAE,CAAC;QACXC,SAAS,EAAE,OAAO;QAClBC,OAAO,EAAE,CAAC;QACVC,eAAe,EAAE;MACnB,CAAE;MAAAL,QAAA,GAEDpD,QAAQ,CAACqC,GAAG,CAAC,CAACL,OAAO,EAAE0B,KAAK,kBAC3B/D,OAAA,CAACf,GAAG;QAEFoE,EAAE,EAAE;UACFQ,OAAO,EAAE,CAAC;UACVG,YAAY,EAAE,CAAC;UACfF,eAAe,EAAEzB,OAAO,CAACV,IAAI,KAAK,MAAM,GAAG,SAAS,GAAG;QACzD,CAAE;QAAA8B,QAAA,EAED,OAAOpB,OAAO,CAACX,IAAI,KAAK,QAAQ,gBAC/B1B,OAAA;UAAAyD,QAAA,EAAMpB,OAAO,CAACX;QAAI;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,gBAEzBpE,OAAA,CAACR,cAAc;UAAC6D,EAAE,EAAE;YAAEgB,SAAS,EAAE;UAAE,CAAE;UAAAZ,QAAA,eACnCzD,OAAA,CAACX,KAAK;YAAA,GAAK0D,aAAa,CAAC,CAAC;YAAE,cAAW,YAAY;YAAAU,QAAA,gBACjDzD,OAAA,CAACP,SAAS;cAAAgE,QAAA,EACPR,YAAY,CAACP,GAAG,CAAE4B,WAAW,iBAC5BtE,OAAA,CAACN,QAAQ;gBAAA,GAAK4E,WAAW,CAACC,mBAAmB,CAAC,CAAC;gBAAAd,QAAA,EAC5Ca,WAAW,CAACE,OAAO,CAAC9B,GAAG,CAAE+B,MAAM,iBAC9BzE,OAAA,CAACT,SAAS;kBAAA,GAAKkF,MAAM,CAACC,cAAc,CAAC,CAAC;kBAAAjB,QAAA,EAAGgB,MAAM,CAACE,MAAM,CAAC,QAAQ;gBAAC;kBAAAV,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAC7E;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACM,CACX;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACO,CAAC,eACZpE,OAAA,CAACV,SAAS;cAAA,GAAK0D,iBAAiB,CAAC,CAAC;cAAAS,QAAA,EAC/BP,IAAI,CAACR,GAAG,CAAEkC,GAAG,IAAK;gBACjBzB,UAAU,CAACyB,GAAG,CAAC;gBACf,oBACE5E,OAAA,CAACN,QAAQ;kBAAA,GAAKkF,GAAG,CAACC,WAAW,CAAC,CAAC;kBAAApB,QAAA,EAC5BmB,GAAG,CAACE,KAAK,CAACpC,GAAG,CAAEqC,IAAI,iBAClB/E,OAAA,CAACT,SAAS;oBAAA,GAAKwF,IAAI,CAACC,YAAY,CAAC,CAAC;oBAAAvB,QAAA,EAAGsB,IAAI,CAACJ,MAAM,CAAC,MAAM;kBAAC;oBAAAV,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY,CACrE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACM,CAAC;cAEf,CAAC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM;MACjB,GAnCIL,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAoCP,CACN,CAAC,EACD7D,OAAO,iBAAIP,OAAA,CAACZ,gBAAgB;QAAA6E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eAGNpE,OAAA,CAACf,GAAG;MACFgG,SAAS,EAAC,MAAM;MAChBC,QAAQ,EAAE5D,YAAa;MACvB+B,EAAE,EAAE;QACFE,OAAO,EAAE,MAAM;QACf4B,UAAU,EAAE,QAAQ;QACpBtB,OAAO,EAAE,CAAC;QACVC,eAAe,EAAE,SAAS;QAC5B;QACEsB,QAAQ,EAAE,QAAQ;QAClBC,MAAM,EAAE;MACV,CAAE;MAAA5B,QAAA,eAEFzD,OAAA,CAACd,SAAS;QACRoG,SAAS;QACTC,SAAS;QACTC,OAAO,EAAE7E,SAAU;QACnB8E,OAAO,EAAE,CAAE;QACX1E,KAAK,EAAEZ,MAAO;QACduF,QAAQ,EAAE7E,iBAAkB;QAC5B8E,WAAW,EAAC,kBAAkB;QAC9BC,OAAO,EAAC,UAAU;QAClBC,IAAI,EAAC,OAAO;QACZC,QAAQ,EAAEvF,OAAQ;QAClBwF,UAAU,EAAE;UACVC,cAAc,eACZhG,OAAA,CAACL,cAAc;YAACyF,QAAQ,EAAC,OAAO;YAAA3B,QAAA,eAC9BzD,OAAA,CAACb,UAAU;cAAC8F,SAAS,EAAC,OAAO;cAAAxB,QAAA,gBAC3BzD,OAAA,CAACJ,cAAc;gBAAAqE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAClBpE,OAAA;gBAAO2B,IAAI,EAAC,MAAM;gBAACsE,MAAM;cAAA;gBAAAhC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CACjB;UACD8B,YAAY,eACVlG,OAAA,CAACL,cAAc;YAACyF,QAAQ,EAAC,KAAK;YAAA3B,QAAA,eAC5BzD,OAAA,CAACb,UAAU;cAACwC,IAAI,EAAC,QAAQ;cAACwE,KAAK,EAAC,SAAS;cAACL,QAAQ,EAAEvF,OAAQ;cAAAkD,QAAA,eAC1DzD,OAAA,CAACH,QAAQ;gBAAAoE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAEpB;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB;AAAClE,EAAA,CA5KQD,IAAI;EAAA,QAoEWH,QAAQ;AAAA;AAAAsG,EAAA,GApEvBnG,IAAI;AA8Kb,eAAeA,IAAI;AAAC,IAAAmG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}